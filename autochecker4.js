‚ùó –ó–ê–î–ê–ß–ê #1

–î–æ–ø–æ–≤–Ω–∏ —Ü–∏–∫–ª for —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤—ñ–Ω –ª–æ–≥—É–≤–∞–≤ –≤—Å—ñ —Ü—ñ–ª—ñ —á–∏—Å–ª–∞ –≤ –¥—ñ–∞–ø–∞–∑–æ–Ω—ñ –≤—ñ–¥ start –¥–æ end –≤–∫–ª—é—á–Ω–æ.

–¢–ï–°–¢–ò

‚úÖ –û–≥–æ–ª–æ—à–µ–Ω–∞ –∑–º—ñ–Ω–Ω–∞ start
‚úÖ –ó–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó start - —Ü–µ —á–∏—Å–ª–æ 3
‚úÖ –û–≥–æ–ª–æ—à–µ–Ω–∞ –∑–º—ñ–Ω–Ω–∞ end
‚úÖ –ó–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó end - —Ü–µ —á–∏—Å–ª–æ 7
‚úÖ –û–≥–æ–ª–æ—à–µ–Ω–∞ –∑–º—ñ–Ω–Ω–∞ i - –ª—ñ—á–∏–ª—å–Ω–∏–∫ —Ü–∏–∫–ª—É
‚úÖ –ü–æ—á–∞—Ç–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó i –¥–æ—Ä—ñ–≤–Ω—é—î 3
‚úÖ –£–º–æ–≤–∞ —Ü–∏–∫–ª—É –ø—Ä–∏–≤–æ–¥–∏—Ç—å—Å—è –¥–æ true –¥–æ—Ç–∏, –¥–æ–∫–∏ i –º–µ–Ω—à–µ –∞–±–æ –¥–æ—Ä—ñ–≤–Ω—é—î 7
‚úÖ –ù–∞ –∫–æ–∂–Ω—ñ–π —ñ—Ç–µ—Ä–∞—Ü—ñ—ó –∑–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó i –∑–±—ñ–ª—å—à—É—î—Ç—å—Å—è –Ω–∞ –æ–¥–∏–Ω–∏—Ü—é
‚úÖ –í–∏–≤–µ–¥–µ–Ω–Ω—è —É –∫–æ–Ω—Å–æ–ª—å –∑–º—ñ–Ω–Ω–æ—ó i –ø–æ–∫–∞–∂–µ —á–∏—Å–ª–∞ 3, 4, 5, 6, 7

üß©üß©üß©üß©üß©üß©üçÄüçÄüçÄüçÄüçÄüçÄüçÄüçÄ
// const start = 3;
// const end = 7;
// for (let i = start; i <= end; i += 1) {
//   console.log(i);
// }
----------------------------------------------------

‚ùó –ó–ê–î–ê–ß–ê #2

–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é calculateTotal(number), —è–∫–∞ –ø—Ä–∏–π–º–∞—î —Ü—ñ–ª–µ —á–∏—Å–ª–æ (–ø–∞—Ä–∞–º–µ—Ç—Ä number) —ñ –ø–æ–≤–µ—Ä—Ç–∞—î —Å—É–º—É –≤—Å—ñ—Ö —Ü—ñ–ª–∏—Ö —á–∏—Å–µ–ª –≤—ñ–¥ –æ–¥–∏–Ω–∏—Ü—ñ —ñ –¥–æ —Ü—å–æ–≥–æ —á–∏—Å–ª–∞. –ù–∞–ø—Ä–∏–∫–ª–∞–¥, —è–∫—â–æ number –¥–æ—Ä—ñ–≤–Ω—é—î 3, —Ç–æ —Å—É–º–∞ - —Ü–µ 1 + 2 + 3, —Ç–æ–±—Ç–æ 6.

–¢–ï–°–¢–ò

‚úÖ –û–≥–æ–ª–æ—à–µ–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è calculateTotal(number)
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó calculateTotal(1) –ø–æ–≤–µ—Ä—Ç–∞—î 1
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó calculateTotal(3) –ø–æ–≤–µ—Ä—Ç–∞—î 6
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó calculateTotal(7) –ø–æ–≤–µ—Ä—Ç–∞—î 28
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó calculateTotal(18) –ø–æ–≤–µ—Ä—Ç–∞—î 171
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó calculateTotal(24) –ø–æ–≤–µ—Ä—Ç–∞—î 300
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó calculateTotal() –∑ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º —á–∏—Å–ª–æ–º –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è

üß©üß©üß©üß©üß©üß©üçÄüçÄüçÄüçÄüçÄüçÄüçÄüçÄ
// function calculateTotal(number) {
// let total = 0;
//   for (let i = 1; i <= number; i++) {
//     total += i;
//   }
//   return total;
// }
// console.log(calculateTotal(1));
// console.log(calculateTotal(3));
// console.log(calculateTotal(7));
// console.log(calculateTotal(18));
// console.log(calculateTotal(24));

---------------------------------------------------

‚ùó –ó–ê–î–ê–ß–ê #3

–î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ü–∏–∫–ª—É for —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤—ñ–Ω –ø–æ—Å–ª—ñ–¥–æ–≤–Ω–æ –ª–æ–≥—É–≤–∞–≤ —É—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –º–∞—Å–∏–≤—É fruits.

–¢–ï–°–¢–ò

‚úÖ –û–≥–æ–ª–æ—à–µ–Ω–∞ –∑–º—ñ–Ω–Ω–∞ fruits
‚úÖ –ó–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó fruits - —Ü–µ –º–∞—Å–∏–≤ ["apple", "plum", "pear", "orange"]
‚úÖ –û–≥–æ–ª–æ—à–µ–Ω–∞ –∑–º—ñ–Ω–Ω–∞ i - –ª—ñ—á–∏–ª—å–Ω–∏–∫ —Ü–∏–∫–ª—É
‚úÖ –ü–æ—á–∞—Ç–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó i –¥–æ—Ä—ñ–≤–Ω—é—î 0
‚úÖ –£–º–æ–≤–∞ —Ü–∏–∫–ª—É –ø—Ä–∏–≤–æ–¥–∏—Ç—å—Å—è –¥–æ true –¥–æ—Ç–∏, –¥–æ–∫–∏ i –º–µ–Ω—à–µ –∑–∞ 4
‚úÖ –ù–∞ –∫–æ–∂–Ω—ñ–π —ñ—Ç–µ—Ä–∞—Ü—ñ—ó –∑–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó i –∑–±—ñ–ª—å—à—É—î—Ç—å—Å—è –Ω–∞ –æ–¥–∏–Ω–∏—Ü—é
‚úÖ –í —Ç—ñ–ª—ñ —Ü–∏–∫–ª—É for –æ–≥–æ–ª–æ—à—É—î—Ç—å—Å—è –∑–º—ñ–Ω–Ω–∞ const fruit —ñ —Ü—ñ–π –∑–º—ñ–Ω–Ω—ñ–π –ø—Ä–∏—Å–≤–æ—é—î—Ç—å—Å—è –∑–Ω–∞—á–µ–Ω–Ω—è - –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É
‚úÖ –í —Ç—ñ–ª—ñ —Ü–∏–∫–ª—É for –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –≤–∏–≤–µ–¥–µ–Ω–Ω—è —É –∫–æ–Ω—Å–æ–ª—å –∑–º—ñ–Ω–Ω–æ—ó fruit

üß©üß©üß©üß©üß©üß©üçÄüçÄüçÄüçÄüçÄüçÄüçÄüçÄ
// const fruits = ['apple', 'plum', 'pear', 'orange'];
// for (let i = 0; i < fruits.length; i += 1) {
//   const fruit = fruits[i];
//   console.log(fruit);
// }

--------------------------------------------------

‚ùó –ó–ê–î–ê–ß–ê #4

–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é calculateTotalPrice(order), —è–∫–∞ –ø—Ä–∏–π–º–∞—î –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä order - –º–∞—Å–∏–≤ —á–∏—Å–µ–ª, —ñ –æ–±—á–∏—Å–ª—é—î –∑–∞–≥–∞–ª—å–Ω—É —Å—É–º—É –π–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤. –ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –ø–æ–≤–∏–Ω–Ω–∞ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏—Å—è —É –∑–º—ñ–Ω–Ω—ñ–π total, —è–∫–∞ –ø–æ–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è —è–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–æ–±–æ—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—ó.


–¢–ï–°–¢–ò

‚úÖ –û–≥–æ–ª–æ—à–µ–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è calculateTotalPrice(order)
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó calculateTotalPrice([12, 85, 37, 4]) –ø–æ–≤–µ—Ä—Ç–∞—î 138
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó calculateTotalPrice([164, 48, 291]) –ø–æ–≤–µ—Ä—Ç–∞—î 503
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó calculateTotalPrice([412, 371, 94, 63, 176]) –ø–æ–≤–µ—Ä—Ç–∞—î 1116
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó calculateTotalPrice() –∑ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º –º–∞—Å–∏–≤–æ–º –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è

üß©üß©üß©üß©üß©üß©üçÄüçÄüçÄüçÄüçÄüçÄüçÄüçÄ
// function calculateTotalPrice(order) {
//   let total = 0;
// for (let i = 0; i < order.length; i++) {
//     total += order[i];
//   }
//   return total;
// }
// console.log(calculateTotalPrice([12, 85, 37, 4]));
// console.log(calculateTotalPrice([164, 48, 291]));
// console.log(calculateTotalPrice([412, 371, 94, 63, 176]));
--------------------------------------------------

‚ùó –ó–ê–î–ê–ß–ê #5

–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é findLongestWord(string), —è–∫–∞ –ø—Ä–∏–π–º–∞—î –¥–æ–≤—ñ–ª—å–Ω–∏–π —Ä—è–¥–æ–∫, —â–æ —Å–∫–ª–∞–¥–∞—î—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ –∑—ñ —Å–ª—ñ–≤, —Ä–æ–∑–¥—ñ–ª–µ–Ω–∏—Ö –ø—Ä–æ–±—ñ–ª–æ–º (–ø–∞—Ä–∞–º–µ—Ç—Ä string), —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–∞–π–¥–æ–≤—à–µ —Å–ª–æ–≤–æ –≤ —Ü—å–æ–º—É —Ä—è–¥–∫—É.

–¢–ï–°–¢–ò

‚úÖ –û–≥–æ–ª–æ—à–µ–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è findLongestWord(string)
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó findLongestWord("The quick brown fox jumped over the lazy dog") –ø–æ–≤–µ—Ä—Ç–∞—î jumped
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó findLongestWord("Google do a roll") –ø–æ–≤–µ—Ä—Ç–∞—î Google
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó findLongestWord("May the force be with you") –ø–æ–≤–µ—Ä—Ç–∞—î force
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó findLongestWord() –∑ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º —Ä—è–¥–∫–æ–º –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è

üß©üß©üß©üß©üß©üß©üçÄüçÄüçÄüçÄüçÄüçÄüçÄüçÄ
// function findLongestWord(string) {
// const words = string.split(" ");
//   let longestWord = words[0];
//   for (let word of words) {
//     if (word.length > longestWord.length) {
//       longestWord = word;
//     }
//   }
//   return longestWord;
// }
// console.log(findLongestWord("The quick brown fox jumped over the lazy dog"));
// console.log(findLongestWord("Google do a roll"));
// console.log(findLongestWord("May the force be with you"));

----------------------------------------------------

‚ùó –ó–ê–î–ê–ß–ê #6

–î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ñ—É–Ω–∫—Ü—ñ—ó createArrayOfNumbers(min, max) —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞ –ø–æ–≤–µ—Ä—Ç–∞–ª–∞ –º–∞—Å–∏–≤ —É—Å—ñ—Ö —Ü—ñ–ª–∏—Ö —á–∏—Å–µ–ª –≤—ñ–¥ –∑–Ω–∞—á–µ–Ω–Ω—è min –¥–æ max.

–¢–ï–°–¢–ò

‚úÖ –û–≥–æ–ª–æ—à–µ–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è createArrayOfNumbers(min, max)
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó createArrayOfNumbers(1, 3) –ø–æ–≤–µ—Ä—Ç–∞—î [1, 2, 3]
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó createArrayOfNumbers(14, 17) –ø–æ–≤–µ—Ä—Ç–∞—î [14, 15, 16, 17]
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó createArrayOfNumbers(29, 34) –ø–æ–≤–µ—Ä—Ç–∞—î [29, 30, 31, 32, 33, 34]
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó createArrayOfNumbers() –∑ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º–∏ min —ñ max –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –º–∞—Å–∏–≤
–í —Ü–∏–∫–ª—ñ for –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–≤—Å—è –º–µ—Ç–æ–¥ push

üß©üß©üß©üß©üß©üß©üçÄüçÄüçÄüçÄüçÄüçÄüçÄüçÄ
// function createArrayOfNumbers(min, max) {
//   const numbers = [];
// for (let i = min; i <= max; i++) {
//     numbers.push(i);
//   }
//   return numbers;
// }
// console.log(createArrayOfNumbers(1, 3));
// console.log(createArrayOfNumbers(14, 17));
// console.log(createArrayOfNumbers(29, 34));

----------------------------------------------------

‚ùó –ó–ê–î–ê–ß–ê #7

–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é filterArray(numbers, value), —è–∫–∞ –ø—Ä–∏–π–º–∞—î –º–∞—Å–∏–≤ —á–∏—Å–µ–ª (–ø–∞—Ä–∞–º–µ—Ç—Ä numbers) —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤, –≤ —è–∫–æ–º—É –±—É–¥—É—Ç—å —Ç—ñ–ª—å–∫–∏ —Ç—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –º–∞—Å–∏–≤—É numbers, —è–∫—ñ –±—ñ–ª—å—à—ñ –∑–∞ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ value (—á–∏—Å–ª–æ).

–¢–ï–°–¢–ò

‚úÖ –û–≥–æ–ª–æ—à–µ–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è filterArray(numbers, value)
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó filterArray([1, 2, 3, 4, 5], 3) –ø–æ–≤–µ—Ä—Ç–∞—î [4, 5]
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó filterArray([1, 2, 3, 4, 5], 4) –ø–æ–≤–µ—Ä—Ç–∞—î [5]
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó filterArray([1, 2, 3, 4, 5], 5) –ø–æ–≤–µ—Ä—Ç–∞—î []
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó filterArray([12, 24, 8, 41, 76], 38) –ø–æ–≤–µ—Ä—Ç–∞—î [41, 76]
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó filterArray([12, 24, 8, 41, 76], 20) –ø–æ–≤–µ—Ä—Ç–∞—î [24, 41, 76]
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó filterArray() –∑ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º –º–∞—Å–∏–≤–æ–º —ñ —á–∏—Å–ª–æ–º –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –º–∞—Å–∏–≤
–í —Ü–∏–∫–ª—ñ for –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–≤—Å—è –º–µ—Ç–æ–¥ push

üß©üß©üß©üß©üß©üß©üçÄüçÄüçÄüçÄüçÄüçÄüçÄüçÄ
// let filteredArray = [];
//   for (const number of numbers) {
//     if (number > value) {
//       filteredArray.push(number);
//     }
//   }
//   return filteredArray;
// }
// console.log(filterArray([1, 2, 3, 4, 5], 3));
// console.log(filterArray([1, 2, 3, 4, 5], 4));
// console.log(filterArray([1, 2, 3, 4, 5], 5));
// console.log(filterArray([12, 24, 8, 41, 76], 38));
// console.log(filterArray([12, 24, 8, 41, 76], 20));

----------------------------------------------------

‚ùó –ó–ê–î–ê–ß–ê #8

–§—É–Ω–∫—Ü—ñ—è checkFruit(fruit) –ø—Ä–∏–π–º–∞—î —Ä—è–¥–æ–∫ –∑ –Ω–∞–∑–≤–æ—é —Ñ—Ä—É–∫—Ç–∞ (–ø–∞—Ä–∞–º–µ—Ç—Ä fruit), —ñ –ø–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –ø—Ä–∏—Å—É—Ç–Ω—ñ–π —Ç–∞–∫–∏–π —Ñ—Ä—É–∫—Ç –≤ –º–∞—Å–∏–≤—ñ fruits.

–î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ñ—É–Ω–∫—Ü—ñ—ó —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ —è–∫—â–æ:

—Ñ—Ä—É–∫—Ç –ø—Ä–∏—Å—É—Ç–Ω—ñ–π –≤ –º–∞—Å–∏–≤—ñ, —Ç–æ —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î true;
—Ñ—Ä—É–∫—Ç –≤—ñ–¥—Å—É—Ç–Ω—ñ–π –≤ –º–∞—Å–∏–≤—ñ, —Ç–æ —Ñ—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î false.

–¢–ï–°–¢–ò

‚úÖ –û–≥–æ–ª–æ—à–µ–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è checkFruit(fruit)
‚úÖ –í–∏–∫–ª–∏–∫ checkFruit("plum") –ø–æ–≤–µ—Ä—Ç–∞—î true
‚úÖ –í–∏–∫–ª–∏–∫ checkFruit("mandarin") –ø–æ–≤–µ—Ä—Ç–∞—î false
‚úÖ –í–∏–∫–ª–∏–∫ checkFruit("pear") –ø–æ–≤–µ—Ä—Ç–∞—î true
‚úÖ –í–∏–∫–ª–∏–∫ checkFruit("Pear") –ø–æ–≤–µ—Ä—Ç–∞—î false
‚úÖ –í–∏–∫–ª–∏–∫ checkFruit("apple") –ø–æ–≤–µ—Ä—Ç–∞—î true
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó checkFruit() –∑ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º —Å–ª–æ–≤–æ–º –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è boolean
‚úÖ –£ —Ñ—É–Ω–∫—Ü—ñ—ó –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–≤—Å—è –º–µ—Ç–æ–¥ includes

üß©üß©üß©üß©üß©üß©üçÄüçÄüçÄüçÄüçÄüçÄüçÄüçÄ
// function checkFruit(fruit) {
//   const fruits = ["apple", "plum", "pear", "orange"];
//   return fruits.includes(fruit);
// }
// console.log(checkFruit("plum"));
// console.log(checkFruit("mandarin"));
// console.log(checkFruit("pear"));
// console.log(checkFruit("Pear"));
// console.log(checkFruit("apple"));

----------------------------------------------------

‚ùó –ó–ê–î–ê–ß–ê #9

–°–ø—ñ–ª—å–Ω–∏–º–∏ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ –º–∞—Å–∏–≤—ñ–≤ –Ω–∞–∑–∏–≤–∞—é—Ç—å —Ç—ñ –µ–ª–µ–º–µ–Ω—Ç–∏, —è–∫—ñ –ø—Ä–∏—Å—É—Ç–Ω—ñ —É –≤—Å—ñ—Ö –º–∞—Å–∏–≤–∞—Ö.
–ù–∞–ø—Ä–∏–∫–ª–∞–¥, —É –¥–≤–æ—Ö –º–∞—Å–∏–≤–∞—Ö [1, 3, 5] —ñ [0, 8, 5, 3] —Å–ø—ñ–ª—å–Ω–∏–º–∏ –±—É–¥—É—Ç—å —á–∏—Å–ª–∞ 3 —ñ 5, –æ—Å–∫—ñ–ª—å–∫–∏ –≤–æ–Ω–∏ –ø—Ä–∏—Å—É—Ç–Ω—ñ –≤ –æ–±–æ—Ö –≤–∏—Ö—ñ–¥–Ω–∏—Ö –º–∞—Å–∏–≤–∞—Ö. –ê —á–∏—Å–ª–∞ 0, 1 —ñ 8 –ø—Ä–∏—Å—É—Ç–Ω—ñ —Ç—ñ–ª—å–∫–∏ –≤ –æ–¥–Ω–æ–º—É –∑ –º–∞—Å–∏–≤—ñ–≤.

–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é getCommonElements(array1, array2), —è–∫–∞ –æ—Ç—Ä–∏–º—É—î –¥–≤–∞ –º–∞—Å–∏–≤–∏ –¥–æ–≤—ñ–ª—å–Ω–æ—ó –¥–æ–≤–∂–∏–Ω–∏ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ array1 —ñ array2, —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤, —â–æ —Å–∫–ª–∞–¥–∞—î—Ç—å—Å—è –∑ —Ç–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤, —è–∫—ñ –ø—Ä–∏—Å—É—Ç–Ω—ñ –≤ –æ–±–æ—Ö –≤–∏—Ö—ñ–¥–Ω–∏—Ö –º–∞—Å–∏–≤–∞—Ö.

–¢–ï–°–¢–ò

‚úÖ –û–≥–æ–ª–æ—à–µ–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è getCommonElements(array1, array2)
‚úÖ –í–∏–∫–ª–∏–∫ getCommonElements([1, 2, 3], [2, 4]) –ø–æ–≤–µ—Ä—Ç–∞—î [2]
‚úÖ –í–∏–∫–ª–∏–∫ getCommonElements([1, 2, 3], [2, 1, 17, 19]) –ø–æ–≤–µ—Ä—Ç–∞—î [1, 2]
‚úÖ –í–∏–∫–ª–∏–∫ getCommonElements([24, 12, 27, 3], [12, 8, 3, 36, 27]) –ø–æ–≤–µ—Ä—Ç–∞—î [12, 27, 3]
‚úÖ –í–∏–∫–ª–∏–∫ getCommonElements([10, 20, 30, 40], [4, 30, 17, 10, 40]) –ø–æ–≤–µ—Ä—Ç–∞—î [10, 30, 40]
‚úÖ –í–∏–∫–ª–∏–∫ getCommonElements([1, 2, 3], [10, 20, 30]) –ø–æ–≤–µ—Ä—Ç–∞—î []
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó getCommonElements() –∑ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º–∏ –¥–≤–æ–º–∞ –º–∞—Å–∏–≤–∞–º–∏ –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –º–∞—Å–∏–≤
‚úÖ –í —Ü–∏–∫–ª—ñ for –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–ª–∏—Å—è –º–µ—Ç–æ–¥–∏ includes —ñ push


üß©üß©üß©üß©üß©üß©üçÄüçÄüçÄüçÄüçÄüçÄüçÄüçÄ
// function getCommonElements(array1, array2) {
// let commonElements = [];
//   for (const element of array1) {
//     if (array2.includes(element)) {
//       commonElements.push(element);
//     }
//   }
//   return commonElements;
// }
// console.log(getCommonElements([1, 2, 3], [2, 4]));
// console.log(getCommonElements([1, 2, 3], [2, 1, 17, 19]));
// console.log(getCommonElements([24, 12, 27, 3], [12, 8, 3, 36, 27]));
// console.log(getCommonElements([10, 20, 30, 40], [4, 30, 17, 10, 40]));
// console.log(getCommonElements([1, 2, 3], [10, 20, 30]));


-----------------------------------------------------

‚ùó –ó–ê–î–ê–ß–ê #10

–í–∏–∫–æ–Ω–∞–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É —Ñ—É–Ω–∫—Ü—ñ—ó calculateTotalPrice(order), –∑–∞–º—ñ–Ω–∏–≤—à–∏ —Ü–∏–∫–ª for –Ω–∞ for...of.

–¢–ï–°–¢–ò

‚úÖ –û–≥–æ–ª–æ—à–µ–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è calculateTotalPrice(order)
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó calculateTotalPrice([12, 85, 37, 4]) –ø–æ–≤–µ—Ä—Ç–∞—î 138
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó calculateTotalPrice([164, 48, 291]) –ø–æ–≤–µ—Ä—Ç–∞—î 503
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó calculateTotalPrice([412, 371, 94, 63, 176]) –ø–æ–≤–µ—Ä—Ç–∞—î 1116
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó calculateTotalPrice([]) –ø–æ–≤–µ—Ä—Ç–∞—î 0
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó calculateTotalPrice() –∑ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º –º–∞—Å–∏–≤–æ–º —á–∏—Å–µ–ª –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω—É —Å—É–º—É

üß©üß©üß©üß©üß©üß©üçÄüçÄüçÄüçÄüçÄüçÄüçÄüçÄ
// function calculateTotalPrice(order) {
//   let total = 0;
//   for (const price of order) {
//     total += price;
//   }
//   return total;
// }
// console.log(calculateTotalPrice([12, 85, 37, 4]));
// console.log(calculateTotalPrice([164, 48, 291]));
// console.log(calculateTotalPrice([412, 371, 94, 63, 176]));
// console.log(calculateTotalPrice([]));

----------------------------------------------------

‚ùó –ó–ê–î–ê–ß–ê #11

–í–∏–∫–æ–Ω–∞–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Ñ—É–Ω–∫—Ü—ñ—ó filterArray(numbers, value), –∑–∞–º—ñ–Ω–∏–≤—à–∏ —Ü–∏–∫–ª for –Ω–∞ for...of.

–¢–ï–°–¢–ò

‚úÖ –û–≥–æ–ª–æ—à–µ–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è filterArray(numbers, value)
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó filterArray([1, 2, 3, 4, 5], 3) –ø–æ–≤–µ—Ä—Ç–∞—î [4, 5]
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó filterArray([1, 2, 3, 4, 5], 4) –ø–æ–≤–µ—Ä—Ç–∞—î [5]
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó filterArray([1, 2, 3, 4, 5], 5) –ø–æ–≤–µ—Ä—Ç–∞—î []
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó filterArray([12, 24, 8, 41, 76], 38) –ø–æ–≤–µ—Ä—Ç–∞—î [41, 76]
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó filterArray([12, 24, 8, 41, 76], 20) –ø–æ–≤–µ—Ä—Ç–∞—î [24, 41, 76]
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó filterArray() –∑ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º –º–∞—Å–∏–≤–æ–º —ñ —á–∏—Å–ª–æ–º –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –º–∞—Å–∏–≤
‚úÖ –§—É–Ω–∫—Ü—ñ—è filterArray() –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —Ü–∏–∫–ª for..of

üß©üß©üß©üß©üß©üß©üçÄüçÄüçÄüçÄüçÄüçÄüçÄüçÄ
// function filterArray(numbers, value) {
//   const filteredNumbers = [];
//   for (const number of numbers) {
//     if (number > value) {
//       filteredNumbers.push(number);
//     }
//   }
//   return filteredNumbers;
// }
// console.log(filterArray([1, 2, 3, 4, 5], 3));
// console.log(filterArray([1, 2, 3, 4, 5], 4));
// console.log(filterArray([1, 2, 3, 4, 5], 5));
// console.log(filterArray([12, 24, 8, 41, 76], 38));
// console.log(filterArray([12, 24, 8, 41, 76], 20));


-----------------------------------------------------

‚ùó –ó–ê–î–ê–ß–ê #12

–î–æ–ø–æ–≤–Ω–∏ –≤–∏—Ä–∞–∑ –æ—Å—Ç–∞—á—ñ –≤—ñ–¥ –¥—ñ–ª–µ–Ω–Ω—è —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –∫–æ–¥ –ø—Ä–æ—Ö–æ–¥–∏–≤ —Ç–µ—Å—Ç–∏.

–¢–ï–°–¢–ò

‚úÖ –û–≥–æ–ª–æ—à–µ–Ω–∞ –∑–º—ñ–Ω–Ω–∞ a
‚úÖ –ó–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó a - —Ü–µ —á–∏—Å–ª–æ 0
‚úÖ –û–≥–æ–ª–æ—à–µ–Ω–∞ –∑–º—ñ–Ω–Ω–∞ b
‚úÖ –ó–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó b - —Ü–µ —á–∏—Å–ª–æ 1
‚úÖ –û–≥–æ–ª–æ—à–µ–Ω–∞ –∑–º—ñ–Ω–Ω–∞ c
‚úÖ –ó–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó c - —Ü–µ —á–∏—Å–ª–æ 3
‚úÖ –û–≥–æ–ª–æ—à–µ–Ω–∞ –∑–º—ñ–Ω–Ω–∞ d
‚úÖ –ó–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó d - —Ü–µ —á–∏—Å–ª–æ 5
‚úÖ –û–≥–æ–ª–æ—à–µ–Ω–∞ –∑–º—ñ–Ω–Ω–∞ e
‚úÖ –ó–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó e - —Ü–µ —á–∏—Å–ª–æ 2

üß©üß©üß©üß©üß©üß©üçÄüçÄüçÄüçÄüçÄüçÄüçÄüçÄ
// const a = 3 % 3;
// const b = 4 % 3;
// const c = 11 % 8;
// const d = 12 % 7;
// const e = 8 % 6;
// console.log(a);
// console.log(b);
// console.log(c);
// console.log(d);
// console.log(e);


-----------------------------------------------------

‚ùó –ó–ê–î–ê–ß–ê #13

–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é getEvenNumbers(start, end), —è–∫–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ —É—Å—ñ—Ö –ø–∞—Ä–Ω–∏—Ö —á–∏—Å–µ–ª –≤—ñ–¥ start –¥–æ end. –ü–∞—Ä–Ω–∏–º –≤–≤–∞–∂–∞—î—Ç—å—Å—è —á–∏—Å–ª–æ, —è–∫–µ –¥—ñ–ª–∏—Ç—å—Å—è –Ω–∞ 2 –±–µ–∑ –æ—Å—Ç–∞—á—ñ (10 % 2 === 0).
    

–¢–ï–°–¢–ò

‚úÖ –û–≥–æ–ª–æ—à–µ–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è getEvenNumbers(start, end)
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó getEvenNumbers(2, 5) –ø–æ–≤–µ—Ä—Ç–∞—î [2, 4]
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó getEvenNumbers(3, 11) –ø–æ–≤–µ—Ä—Ç–∞—î [4, 6, 8, 10]
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó getEvenNumbers(6, 12) –ø–æ–≤–µ—Ä—Ç–∞—î [6, 8, 10, 12]
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó getEvenNumbers(8, 8) –ø–æ–≤–µ—Ä—Ç–∞—î [8]
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó getEvenNumbers(7, 7) –ø–æ–≤–µ—Ä—Ç–∞—î []
‚úÖ –í–∏–∫–ª–∏–∫ —Ñ—É–Ω–∫—Ü—ñ—ó getEvenNumbers() –∑ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º–∏ start —ñ end –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –º–∞—Å–∏–≤

üß©üß©üß©üß©üß©üß©üçÄüçÄüçÄüçÄüçÄüçÄüçÄüçÄ
// function getEvenNumbers(start, end) {
// const result = [];
//   for (let i = start; i <= end; i++) {
//     if (i % 2 === 0) {
//       result.push(i);
//     }
//   }
//   return result;
// }
// console.log(getEvenNumbers(2, 5));
// console.log(getEvenNumbers(3, 11));
// console.log(getEvenNumbers(6, 12));
// console.log(getEvenNumbers(8, 8));
// console.log(getEvenNumbers(7, 7));


-----------------------------------------------------

‚ùó –ó–ê–î–ê–ß–ê #14

–î–æ–ø–æ–≤–Ω–∏ –∫–æ–¥ —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± —É –∑–º—ñ–Ω–Ω—É number –∑–∞–ø–∏—Å—É–≤–∞–ª–æ—Å—è –ø–µ—Ä—à–µ —á–∏—Å–ª–æ –≤—ñ–¥ start –¥–æ end, —è–∫–µ –¥—ñ–ª–∏—Ç—å—Å—è –Ω–∞ 5 –±–µ–∑ –æ—Å—Ç–∞—á—ñ.

–¢–ï–°–¢–ò

‚úÖ –û–≥–æ–ª–æ—à–µ–Ω–∞ –∑–º—ñ–Ω–Ω–∞ start –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º 6
‚úÖ –û–≥–æ–ª–æ—à–µ–Ω–∞ –∑–º—ñ–Ω–Ω–∞ end –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º 27
‚úÖ –û–≥–æ–ª–æ—à–µ–Ω–∞ –∑–º—ñ–Ω–Ω–∞ number –±–µ–∑ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
‚úÖ –ü—ñ–¥—Å—É–º–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó number –¥–æ—Ä—ñ–≤–Ω—é—î 10
‚úÖ –í —Ü–∏–∫–ª—ñ for –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è break –¥–ª—è –≤–∏—Ö–æ–¥—É –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —É—Å—ñ—Ö —ñ—Ç–µ—Ä–∞—Ü—ñ–π —Ü–∏–∫–ª—É

üß©üß©üß©üß©üß©üß©üçÄüçÄüçÄüçÄüçÄüçÄüçÄüçÄ
// const start = 6;
// const end = 27;
// let number;
// for (let i = start; i < end; i += 1) {
//   if (i % 5 === 0) {
//     number = i;
//     break;
//   }
// }
// console.log(number);

-----------------------------------------------------

‚ùó –ó–ê–î–ê–ß–ê 15

–í–∏–∫–æ–Ω–∞–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Ñ—É–Ω–∫—Ü—ñ—ó findNumber(start, end, divisor) —Ç–∞–∫–∏–º —á–∏–Ω–æ–º, —â–æ–± –≤–æ–Ω–∞:

–ø–æ–≤–µ—Ä—Ç–∞–ª–∞ –ø–µ—Ä—à–µ —á–∏—Å–ª–æ –≤—ñ–¥ start –¥–æ end, —è–∫–µ –¥—ñ–ª–∏—Ç—å—Å—è –Ω–∞ divisor –±–µ–∑ –æ—Å—Ç–∞—á—ñ
–Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–ª–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä break
–Ω–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–ª–∞ –∑–º—ñ–Ω–Ω—É number

–¢–ï–°–¢–ò

‚úÖ –û–≥–æ–ª–æ—à–µ–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è findNumber(start, end, divisor)
‚úÖ –í–∏–∫–ª–∏–∫ findNumber(2, 6, 5) –ø–æ–≤–µ—Ä—Ç–∞—î 5
‚úÖ –í–∏–∫–ª–∏–∫ findNumber(8, 17, 3) –ø–æ–≤–µ—Ä—Ç–∞—î 9
‚úÖ –í–∏–∫–ª–∏–∫ findNumber(6, 9, 4) –ø–æ–≤–µ—Ä—Ç–∞—î 8
‚úÖ –í–∏–∫–ª–∏–∫ findNumber(16, 35, 7) –ø–æ–≤–µ—Ä—Ç–∞—î 21
‚úÖ –í–∏–∫–ª–∏–∫ findNumber() –∑ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º –Ω–∞–±–æ—Ä–æ–º —á–∏—Å–µ–ª –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
‚úÖ –í —Ü–∏–∫–ª—ñ for –Ω–µ –ø–æ–≤–∏–Ω–µ–Ω –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—è break –¥–ª—è –≤–∏—Ö–æ–¥—É –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –≤—Å—ñ—Ö —ñ—Ç–µ—Ä–∞—Ü—ñ–π —Ü–∏–∫–ª—É

üß©üß©üß©üß©üß©üß©üçÄüçÄüçÄüçÄüçÄüçÄüçÄüçÄ
// function findNumber(start, end, divisor) {
//   for (let i = start; i <= end; i++) {
//     if (i % divisor === 0) {
//       return i;
//     }
//   }
//   return null;
// }
// console.log(findNumber(2, 6, 5));
// console.log(findNumber(8, 17, 3));
// console.log(findNumber(6, 9, 4));
// console.log(findNumber(16, 35, 7));

-----------------------------------------------------

‚ùó –ó–ê–î–ê–ß–ê 16

–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é includes(array, value), —è–∫–∞ —Ä–æ–±–∏—Ç—å —Ç–µ —Å–∞–º–µ, —â–æ —ñ –º–µ—Ç–æ–¥ –º–∞—Å–∏–≤—É –º–∞—Å–∏–≤.includes(–∑–Ω–∞—á–µ–Ω–Ω—è) - –ø–µ—Ä–µ–≤—ñ—Ä—è—î, —á–∏ –ø—Ä–∏—Å—É—Ç–Ω—î –≤ –º–∞—Å–∏–≤—ñ array –∑–Ω–∞—á–µ–Ω–Ω—è value, –ø–æ–≤–µ—Ä—Ç–∞—é—á–∏ true, —è–∫—â–æ –ø—Ä–∏—Å—É—Ç–Ω—î, —ñ false –≤ —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É.

–ü—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ —Ü—å–æ–≥–æ –∑–∞–≤–¥–∞–Ω–Ω—è –≤ —Ç—ñ–ª—ñ —Ñ—É–Ω–∫—Ü—ñ—ó includes() –Ω–µ –º–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –º–µ—Ç–æ–¥ –º–∞—Å–∏–≤.includes(–∑–Ω–∞—á–µ–Ω–Ω—è).

–¢–ï–°–¢–ò

‚úÖ –û–≥–æ–ª–æ—à–µ–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è includes(array, value)
‚úÖ –í–∏–∫–ª–∏–∫ includes([1, 2, 3, 4, 5], 3) –ø–æ–≤–µ—Ä—Ç–∞—î true
‚úÖ –í–∏–∫–ª–∏–∫ includes([1, 2, 3, 4, 5], 17) –ø–æ–≤–µ—Ä—Ç–∞—î false
‚úÖ –í–∏–∫–ª–∏–∫ includes(["Earth", "Mars", "Venus", "Jupiter", "Saturn"], "Jupiter") –ø–æ–≤–µ—Ä—Ç–∞—î true
‚úÖ –í–∏–∫–ª–∏–∫ includes(["Earth", "Mars", "Venus", "Jupiter", "Saturn"], "Uranus") –ø–æ–≤–µ—Ä—Ç–∞—î false
‚úÖ –í–∏–∫–ª–∏–∫ includes(["apple", "plum", "pear", "orange"], "plum") –ø–æ–≤–µ—Ä—Ç–∞—î true
‚úÖ –í–∏–∫–ª–∏–∫ includes(["apple", "plum", "pear", "orange"], "kiwi") –ø–æ–≤–µ—Ä—Ç–∞—î false
‚úÖ –í–∏–∫–ª–∏–∫ includes() –¥–ª—è –≤–∏–ø–∞–¥–∫–æ–≤–æ–≥–æ –º–∞—Å–∏–≤—É –∑ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º value –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π boolean
‚úÖ –£ —Ñ—É–Ω–∫—Ü—ñ—ó includes –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è for, return, –∞–ª–µ –Ω–µ –º–µ—Ç–æ–¥ –º–∞—Å–∏–≤—É includes


üß©üß©üß©üß©üß©üß©üçÄüçÄüçÄüçÄüçÄüçÄüçÄüçÄ
// function includes(array, value) {
// for (const element of array) {
//     if (element === value) {
//       return true;
//     }
//   }
//   return false;
// }
// console.log(includes([1, 2, 3, 4, 5], 3));
// console.log(includes([1, 2, 3, 4, 5], 17));
// console.log(includes(["Earth", "Mars", "Venus", "Jupiter", "Saturn"], "Jupiter"));
// console.log(includes(["Earth", "Mars", "Venus", "Jupiter", "Saturn"], "Uranus"));
// console.log(includes(["apple", "plum", "pear", "orange"], "plum"));
// console.log(includes(["apple", "plum", "pear", "orange"], "kiwi"));

